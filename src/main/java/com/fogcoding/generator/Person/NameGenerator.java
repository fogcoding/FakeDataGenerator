package com.fogcoding.generator.Person;

import com.fogcoding.generator.Person.model.Person;

import java.util.Random;

/**
 * @version 1.0
 * @author: fogcoding
 * @date: 2020/3/21 16:21
 * @e-mail: thinfog@126.com
 */
public class NameGenerator {

    private String xing = "赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季麻强贾路娄危江童颜郭梅盛林刁钟徐邱骆高夏蔡田樊胡凌霍虞万支柯昝管卢莫经房裘缪干解应宗丁宣贲邓郁单杭洪包诸左石崔吉钮龚程嵇邢滑裴陆荣翁荀羊於惠甄曲家封芮羿储靳汲邴糜松井段富巫乌焦巴弓牧隗山谷车侯宓蓬全郗班仰秋仲伊宫宁仇栾暴甘钭厉戎祖武符刘景詹束龙叶幸司韶郜黎蓟薄印宿白怀蒲邰从鄂索咸籍赖卓蔺屠蒙池乔阴鬱胥能苍双闻莘党翟谭贡劳逄姬申扶堵冉宰郦雍卻璩桑桂濮牛寿通边扈燕冀郏浦尚农温别庄晏柴瞿阎充慕连茹习宦艾鱼容向古易慎戈廖庾终暨居衡步都耿满弘匡国文寇广禄阙东欧殳沃利蔚越夔隆师巩厍聂晁勾敖融冷訾辛阚那简饶空曾毋沙乜养鞠须丰巢关蒯相查后荆红游竺权逯盖益桓公";
    //取奇数，取两位就可以得到复姓
    private String fu_xing = "万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于单于太叔申屠公孙仲孙轩辕令狐钟离宇文长孙慕容鲜于闾丘司徒司空丌官司寇仉督子车颛孙端木巫马公西漆雕乐正壤驷公良拓跋夹谷宰父谷梁晋楚闫法汝鄢涂钦段干百里东郭南门呼延归海羊舌微生岳帅缑亢况郈有琴梁丘左丘东门西门商牟佘佴伯赏南宫墨哈谯笪年爱阳佟";
    private String w_ming = "华诗宛虹枫莜霄菁静岚姗娜丹萍筠昭双璇碧莹汐雯冰洁璐瑾佳仪翠美婕妍琪欢雨璇芊珂莜莺晶茜璇冰颖春红雅菲倩媛丹莹凝霏霄钰艳妤姝芹颖韵芝婵秋灿娥霁菁真蝶雁贞希姗虹妍颖素莲莎梅芳琳英瑶芬荷雅繁凌馨若仟璐秋筱泺珺丹丽妍素筠素英颖婧双芯凝菱婧媚紫初苑珞恬纤玫梅铃滟妙菡璐童璇洁馥馨昕彤如卉雪静敏燕艳丽娟莉芳萍玲娜丹洁红颖琳霞婷慧莹晶华倩英佳梅雪蕾琴璐云蓉青薇欣琼宁媛虹杰婧雯茜楠洋君辉菲琦妍阳爽兰晨冰瑶瑾岩瑛悦群玮欢瑜蕊宇明珊涛荣超琪玉怡文岚杨婕旭凤芬芸晓萌露菁惠瑞蓓璇珍月利勤清帆迪微娇影朋莎彬昕乐星新烨卉晴曼越靖维晔艺睿芹淼黎畅春柳梦妮翠然钰蔚曦茹凌扬美彤园炜捷亮雁叶苗菊雨琰聪潇甜花雅立姣馨珏秀珂思哲冉骊双娅培斐嘉莲莺佩娴玥真凯裙源奕靓枫洪姝希锦姗昱卓冬香焱硕浩纯韵玫婵巧笑俐羽舒盼涵可航懿晗铭滢盈鸿茵灿程灵征琨江贞路煜圆贺一苹秋鹤珺南榕桦轶昊夏迎光智臻恒景吉银铮成松娣旋辰远樱糊苏喆沁霜霖皓晋田筠珠元湘嫣卿蒙京泓媚跃隽泉赛弘妹婉原环攀澜鹰音昆冲川芝娥贤昀野奇歌鸽竹璟苑诚滨萱霄嵘沙念汉岑桃骏谦安寅贝钦熙幸如沛意果寒柯芮鹃心海荔逸津渊尧天震瓤溪炎研颜赞兴郑瑗益韶密歆易舟菡风笛龙爱唯乔丰渝驰葡祯郁蕴延俏恬毓腾杉岭诺峻缨永玎恋杏斯义俭漫正森丛漪昭硼蕙亭理铃咏岳桐璞非祺放炯焰葵依彩蝶筱戈苓为蔷展良想志总耘淳泽好妤妙翼羚竞品伶伊子鸥仙净格山忠肖麟默齐润淑轩蔓葳皎西绮沫桢童言禹涓严韬映赫翎玺霏达宜钧蜜泳纳忱熠振碧素珉情荟侃谊忆屹知旻珩秦飒赢或鹭霓韦桔荷吟仪励栋多嫒澄诗苇胜男艾习弦茗育曝翊频蓝遥谨屏囡优顺鹂盟晏讳宾旎满游季楚俪凝礼曾眉盛衡辛融骅啸氛杭李娉萃芊朗痴耀克余闻浪墩钥祥望朦嫚宝全芯行钊昂学栩仁咪连千冶旖姬晟肠稳霁恺桂茂台闽宪迅书勉霆箐砚端旦蝴颂垚桥骞裕玄粼颍颉殷胤妲菱也典均缘梓旗煦飚灏郡玢豫朔瑕刘前荃运嫱牧来娓陶筝恩堃单含淋添日孟尚照朵姿妃暖衍矫麒实骁信茉郦劫汀瀛城争芄勃喜女引获晰禾醒鲲魏徽闪伦业尔熹戎桑绷冠颇白韫璜珑颢颐策虎联弛汇拉忻愉尤欧纬骥喻劼予翌繁珣慈豪允令若洵汝娆枚惟夭";
    private String m_ming = "伟勇军磊涛斌强鹏杰峰超波辉刚健明亮俊飞凯浩华平鑫毅林洋宇敏宁建兵旭雷锋彬龙翔阳剑东博威海巍晨炜帅岩江松文云力成琦进昊宏欣坤冰锐震楠佳忠庆杨新骏君栋青帆静荣立虎哲晖玮瑞光钢丹坚振晓祥良春晶猛星政智琪永迪冬琳胜康彪乐诚志维卫睿捷群森洪扬科奇铭航利鸣恒源聪凡颖欢昕武雄洁川清义滨皓达民跃越兴正靖曦璐挺淼泉程韬冲硕远昆瑜晔煜红权征雨野慧萌山丰珂彤悦朋钧彦然枫嘉峥寅烨铮卓畅钊金可昱爽盛路晋谦克方闯耀奎一晟勤豪安尧全琛腾队鸿玉泽凌渊蕾广顺莹英峻攀宾驰燕霖喆椒国恺潇琨轶芳吉亚梁焱侃臻嵩岳炯艳宝岗斐啸元辰萍柯羽培通天麟晗菲雪铁贺钰戈灿琼锦生原洲炎丽勋奕艺中德轩京标旺南黎禹莉蔚总益祺骥沛汉真非鹤升蒙城钦锴骁壮罡键瑶虹石展翼为灏玲放娜露赞娟倩懿劲婷策魁霄冉敬卿均治迅臣桦镇骞河希瑾鹰舟丁涵弘纲泳理福俭乾纯双屹涌根怡果田岭昭飚勃嵘熙贤申琰宽鼎滔昌璞逸贵喜昂柳韶瑛伦茂景柱岚实珏霞园学惠衡风玺赫桐寒圣陈旋礼霆月侠密堃富薇仁浪津垒齐炼瀚泓灵朝夏严意银璇鲲易行品垄靓苏澄赛思旗淳雯继友和革延能菁叶隽烽昶笑裕鲁铎昀骅高翀润熠锟望卡微拓名秋冶雁开定想舒庚蓉牧重孟澎信郁珉钟盼恩周潮季烈魏奔承玎来桥尚增婧茜前琴麒竞童舜会柏冠佩游珊融满添咏响珩杉韧梅乔同梦树杭念遥苗胤榕耿崇湘里疆旻启烁楷才仲隆媛晴章舰璟桔李影亭珺言笛弛营宪渝发逊运豹翊研登炳蕊鉴妍焰颂闻桢镭特曙盟贝千保功竹印玥夭冀阔圆湛澍争众肖祯默珍煌余准忱宸普韦舸创芸彭泰心廷其业水焕炬韵裙干唯轲陆陶将骋战歆朔耕崴操幸向葵潜凤兰仪沙胡璋秦珑朗举列蓓纬垚歌献或见多谊迎州声婕栩男衍洵犇颢照辛有育甲禄起淮弋坦量楚熹劫勉典诺溪显毓稳甫羿端旦焘辑宣宙岑存迁万煦渤沁甜日翰淦劼庭徽豫锬铸蚵也好颉雍怀北西耘秀肠玄令蓬联斯霁朕箭坡澜馨瀛港岱宗闽励飙琥谷异嵬垣年尉习格锨桑讳丛淞领深赢宜律朴龚卉化陵庄财墨直煊欧棋孝子弢冕傲劭丞如燃铖畏崧汀弦墩溢崎容锁韩曼汽地芬上佶连郑兆纪盾相翌盈慰戟植晏任农";
    private int[] name_len = {2,3,4};
    private Random random = new Random();

    //todo 有个问题需要思考：数据不够多的情况下，重名怎么解决？ 怎么避免重名？
    public String Women(int len){
        StringBuffer name = new StringBuffer();
        int xing_p = random.nextInt(xing.length());
        name.append(xing.substring(xing_p,xing_p+1));
        int i=1;
        while (i++ < len){
            int ming_p = random.nextInt(w_ming.length()-1);
            name.append(w_ming.substring(ming_p,ming_p+1));
        }
        return name.toString();
    }

    public String Men(int len){
        StringBuffer name = new StringBuffer();
        int xing_p = random.nextInt(xing.length());
        name.append(xing.substring(xing_p,xing_p+1));
        int i=1;
        while (i++ < len){
            int ming_p = random.nextInt(m_ming.length()-1);
            name.append(m_ming.substring(ming_p,ming_p+1));
        }
        return name.toString();
    }




    public boolean isOdd(int num){
        // 得空把这里搞个抛出异常
        if (num < 0){
            return false;
        }
        return num % 2 == 0;
    }

}
